
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * tiempo.java
 *
 * Created on 27-mar-2011, 16:36:01
 */
/**
 *
 * @author Wilfo
 */
public class tiempo extends javax.swing.JFrame {

    /** Creates new form tiempo */
    private DefaultTableModel modeloTabla;
    //contiene los nodos del auxcromo
    //contiene también los nodos ejecutados
    public Cromosoma cromo = new Cromosoma();
    public Cromosoma croDetalle = new Cromosoma();
    Vector<MiSubTareas> VecclsTarea2 = new Vector<MiSubTareas>();

    public tiempo() {
        modeloTabla = new DefaultTableModel();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb_Data = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnVer = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tb_Data.setModel(modeloTabla);
        tb_Data.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tb_Data);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Tiempo de ejecución de las Tareas");

        btnVer.setText("Ver Tiempos");
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(500, 500, 500)
                .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVer)
                    .addComponent(btnSalir)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
        // TODO add your handling code here:
        estructuraTabla(getCromosomaTiempo());
        addRows();
//        imprimir();
//        Vector vec=new Vector();
//        vec.add("A");
//        vec.add("A");
//        vec.add("A");
//        vec.add("A");
//        vec.add("A");

//        modeloTabla.addRow(cromo.gen);
    }//GEN-LAST:event_btnVerActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new tiempo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_Data;
    // End of variables declaration//GEN-END:variables

    public void estructuraTabla(int numCols) {
        for (int k = 0; k < numCols; k++) {
            modeloTabla.addColumn(k + 1);
//            modeloTabla.addColumn("Producto");
//            modeloTabla.addColumn("Cantidad");
        }

        TableColumn column = null;

//        column = tb_Data.getColumnModel().getColumn(0);
//        column.setPreferredWidth(0);
//        column.setMinWidth(0);
////        col.setWidth(0);
//        column.setMaxWidth(0);

        for (int p = 0; p < numCols; p++) {
            column = tb_Data.getColumnModel().getColumn(p);
            column.setPreferredWidth(50);
        }

//        column = tb_Data.getColumnModel().getColumn(2);
//        column.setPreferredWidth(50);

    }

    public int getCromosomaTiempo() {
        int sum = 0;

        for (int k = 0; k < cromo.gen.size(); k++) {
            sum += cromo.gen.elementAt(k).tiempo.size();
        }
        return sum;
    }

    public void addRows() {
        int tamanio = getCromosomaTiempo();
        int salto = 0;
        int x=0;
        for (int p = 0; p < cromo.gen.size(); p++) {
            String[] strnodo = fillRow(tamanio);
            //imprimo el tiempo de cada nodo A[1-2]
            for (int h = 0; h < cromo.gen.elementAt(p).tiempo.size(); h++) {
                strnodo[salto] = cromo.gen.elementAt(p).nodo;
                salto++;
            }
            //inserto el tiempo generado por cada nodo
              modeloTabla.addRow(strnodo);
            //aqui hago el salto de los nodos ejecutados internamente
              
             for(int k=0;k<VecclsTarea2.elementAt(p).v.size();k++){
                 String[] strnodo1 =fillRow(tamanio);
//                 strnodo[x]=VecclsTarea2.elementAt(p).v.elementAt(k).toString();
                if(VecclsTarea2.elementAt(p).v.elementAt(k).toString().length()>=1){
                strnodo1[x]=VecclsTarea2.elementAt(p).v.elementAt(k).toString();
              System.out.println(VecclsTarea2.elementAt(p).v.elementAt(k).toString());
              modeloTabla.addRow(strnodo1);
              x++;
                }
//                 modeloTabla.addRow(strnodo);
//                 salto++;
             }
              x=salto;
              
//          x=salto-1;
        }
    }

    public void addSubRows(int hop){

    }

    public String[] fillRow(int num) {
        String[] cad = new String[num];
        for (int k = 0; k < num; k++) {
            cad[k] = "";
        }
        return cad;

    }

    void imprimir() {
        for (int p = 0; p < VecclsTarea2.size(); p++) {
            System.out.println("tareas ejecutadas dentro del nodo "+(p+1));
            for(int k=0;k<VecclsTarea2.elementAt(p).v.size();k++)
              System.out.println(VecclsTarea2.elementAt(p).v.elementAt(k).toString());
        }
    }
}
